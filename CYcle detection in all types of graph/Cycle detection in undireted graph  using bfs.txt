
#include <bits/stdc++.h>
using namespace std;

string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    vector<int>adj[n+1];
    for(int i=0;i<m;i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);

    }

    queue<int>pq;
    
   
    
    bool isCycle =false;
    vector<bool>visited(n+1,false);

    for(int i=1;i<=n;i++)
    {
     
    vector<int>parent(n+1,-1);
    if(!visited[i])
    {
    pq.push(i);
    visited[i] =true;
    parent[i] =-1;

    while(!pq.empty())
    {
        auto top =pq.front();
        pq.pop();

        for(auto it:adj[top])
        {
          if (!visited[it]) {
            pq.push(it);
            visited[it] = true;
            parent[it] = top;
          }

           else if(visited[it]==true&&parent[top]!=it)
            {
                isCycle =true;
                break;
            }
              
            
            
        }
                    


       
    }
    }
    }
    

    if(isCycle==true)
    return "Yes";
    else{
        return "No";
    }
}
